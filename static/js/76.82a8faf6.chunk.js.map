{"version":3,"file":"static/js/76.82a8faf6.chunk.js","mappings":"8QACA,EAAwB,oBAAxB,EAAuD,uBAAvD,EAA6F,2B,SCO9E,SAASA,IACpB,OAA4BC,EAAAA,EAAAA,UAASC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAENP,EAAUF,EAAAA,EAAAA,SAEVU,GAGH,GAAC,IAEF,IAAMA,EAAO,mCAAG,gHAEiBC,EAAAA,EAAAA,IAAYJ,GAF7B,gBAECK,EAFD,EAECA,KACTR,EAAUQ,GACVV,EAAUF,EAAAA,EAAAA,UAEU,IAAhBY,EAAKC,QACLX,EAAUF,EAAAA,EAAAA,UAPN,kDAWRc,QAAQC,IAAR,MACAT,EAASD,GAZD,0DAAH,qDAgBb,OACI,gCACgB,SAAXJ,IAAqB,wBACV,YAAXA,IAAwB,SAACe,EAAA,EAAD,IACb,aAAXf,IAAyB,eAAIgB,UAAWC,EAAf,iEACd,aAAXjB,IACG,eAAIgB,UAAWC,EAAf,SACSf,EAAOgB,KAAI,SAAAC,GACR,OACI,gBAAIH,UAAWC,EAAf,WACI,gBAAKG,MAAO,CAAEC,MAAO,KAAOC,IAAKH,EAAMI,aAAN,0CACQJ,EAAMI,cACzCC,EACFC,IAAKN,EAAMO,QACf,wBAAKP,EAAMO,QACX,uBAAIP,EAAMQ,cANwBR,EAAMS,GASnD,QAKxB,C,8LC5DKC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,mCAAG,sGACED,EAAAA,GAAAA,IAAA,qCAAwCD,IAD1C,uBACbG,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,qDAMTC,EAAgB,mCAAG,WAAOC,GAAP,yFACLJ,EAAAA,GAAAA,IAAA,6BAAgCI,EAAhC,oBAAiDL,EAAjD,+CADK,uBACpBG,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMhBG,EAAW,mCAAG,WAAO7B,GAAP,yFACAwB,EAAAA,GAAAA,IAAA,gBAAmBxB,EAAnB,oBAAsCuB,EAAtC,oBADA,uBACfG,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,sDAMXtB,EAAW,mCAAG,WAAOJ,GAAP,yFACAwB,EAAAA,GAAAA,IAAA,gBAAmBxB,EAAnB,4BAA8CuB,EAA9C,oBADA,uBACfG,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,sDAMXI,EAAc,mCAAG,WAAO9B,GAAP,yFACHwB,EAAAA,GAAAA,IAAA,gBAAmBxB,EAAnB,4BAA8CuB,EAA9C,2BADG,uBAClBG,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qD,mBCtB3B,IAPe,CACbK,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesApi.js","services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Cast_title__0cH9s\",\"castList\":\"Cast_castList__ARoWn\",\"castListItem\":\"Cast_castListItem__CF66s\"};","import { useState, useEffect } from \"react\";\nimport { getCastById } from \"services/moviesApi\";\nimport { useParams } from 'react-router-dom';\nimport Status from \"services/status\";\nimport Loader from \"components/Loader/Loader\";\nimport noImage from '../../images/person.png'\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n    const [status, setStatus] = useState(Status.IDLE);\n    const [actors, setActors] = useState([]);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n        setStatus(Status.PENDING);\n\n        getCast(); \n        \n        // eslint-disable-next-line\n    },[])\n\n    const getCast = async () => {\n        try {\n            const  { cast }  = await getCastById(movieId);\n            setActors(cast)\n            setStatus(Status.RESOLVED);\n\n            if (cast.length === 0) {\n                setStatus(Status.REJECTED);\n            }\n            \n        } catch (err) {\n            console.log(err);\n            setError(error);\n        }\n    }\n\n    return (\n        <>\n            {status === 'idle' && <></>}\n            {status === 'pending' && <Loader />}\n            {status === 'rejected' && <h2 className={css.title}>We don't have any info about actors for this movie.</h2>}\n            {status === 'resolved' &&\n                <ul className={css.castList}>\n                        {actors.map(actor => {\n                            return (\n                                <li className={css.castListItem} key={actor.id}>\n                                    <img style={{ width: 200 }} src={actor.profile_path\n                                        ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                                        : noImage}\n                                        alt={actor.name} />\n                                    <h3>{actor.name}</h3>\n                                    <p>{actor.character}</p>\n                               </li>\n                            ) \n                        })}\n                </ul>\n            }\n        </>\n    )\n}","import axios from \"axios\";\n\nconst API_KEY = 'cf2dcd3ffc41a0e9e457c0dc88fdeaf2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    // console.log(data)\n    return data;\n}\n\nexport const getMoviesByQuery = async (query) => {\n    const { data } = await axios.get(`search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`)\n    // console.log(data)\n    return data;\n}\n\nexport const getMoviesId = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    // console.log(data)\n    return data;\n}\n\nexport const getCastById = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    // console.log(data)\n    return data;\n}\n\nexport const getReviewsById = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    // console.log(data)\n    return data;\n}\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;"],"names":["Cast","useState","Status","status","setStatus","actors","setActors","error","setError","movieId","useParams","useEffect","getCast","getCastById","cast","length","console","log","Loader","className","css","map","actor","style","width","src","profile_path","noImage","alt","name","character","id","API_KEY","axios","getMovies","data","getMoviesByQuery","query","getMoviesId","getReviewsById","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}